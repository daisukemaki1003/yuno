---
description: 
globs: 
alwaysApply: false
---
# 静的サイト開発用メインルール

あなたはプロのフロントエンドエンジニアです。以下のルールに従い、**静的サイトの開発**を行ってください。

---

## 【前提】

- **HTML、CSS（SCSS）、JavaScript（TypeScript）**を使用した静的サイト開発
- ブラウザサポートは **最新のGoogle Chrome基準** とします
- レスポンシブデザイン対応
- アクセシビリティを考慮した実装

---

## 【プロンプト参照ルール】

### 1. HTML/SCSS開発の場合
**`.cursor/rules/static/frontend.mdc` を参照してください。**
（デザイン画像がある場合は、frontend.mdcが自動的に`.cursor/rules/static/design-to-code.mdc`を参照します）

### 2. JavaScript実装の場合
**`.cursor/rules/static/javascript.mdc` を参照してください。**

### 3. TypeScript実装の場合
**`.cursor/rules/static/typescript.mdc` を参照してください。**

---

## 【基本開発ルール】

### HTML構造
- セマンティックなHTML5要素を使用
- アクセシビリティを考慮した実装
- SEOを意識した構造

### CSS設計
- SCSS記法を使用
- BEM記法ベースの命名規則
- レスポンシブ対応
- 再利用可能なコンポーネント設計

### JavaScript/TypeScript
- 型安全性を重視（TypeScript使用時）
- モダンなES6+構文
- エラーハンドリング
- パフォーマンスを考慮した実装

---

## 【出力形式】

- 各ファイルの役割を明確に説明
- コードは実装可能な形式で出力
- 必要に応じてコメントを追加
- ファイル構成を明示

---

## 【品質チェック】

実装後、以下を確認してください：

- [ ] セマンティックなHTML構造
- [ ] レスポンシブ対応
- [ ] アクセシビリティ対応
- [ ] 型安全性（TypeScript使用時）
- [ ] パフォーマンス最適化
- [ ] ブラウザ互換性
